---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: sonarqube
spec:
  serviceName: "sonarqube"
  selector:
    matchLabels:
      run: sonarqube
  template:
    metadata:
      labels:
        run: sonarqube
    spec:
      containers:
      - name: sonarqube
        image: sonarqube:8.6.0-community
        ports:
        - containerPort: 9000
          name: web
        volumeMounts:
        - name: snr-data
          mountPath: /opt/sonarqube/data
        - name: snr-logs
          mountPath: /opt/sonarqube/logs
        - name: snr-ext
          mountPath: /opt/sonarqube/extensions
        env:
          - name: SONARQUBE_JDBC_USERNAME
            valueFrom:
              secretKeyRef:
                name: sonar-postgres-add
                key: newdbuser
          - name: SONARQUBE_JDBC_PASSWORD
            valueFrom:
              secretKeyRef:
                name: sonar-postgres-add
                key: newdbpass
          - name: SONARQUBE_JDBC_URL
            valueFrom:
              secretKeyRef:
                name: sonar-postgres-add
                key: jdbc-url
      volumes:
      - name: snr-data
        persistentVolumeClaim:
          claimName: snr-data-pvc-sonarqube-0
      - name: snr-logs
        persistentVolumeClaim:
          claimName: snr-logs-pvc-sonarqube-0
      - name: snr-ext
        persistentVolumeClaim:
          claimName: snr-ext-pvc-sonarqube-0
  volumeClaimTemplates:
  - metadata:
      name: snr-data-pvc
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 5Gi
  - metadata:
      name: snr-logs-pvc
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 2Gi
  - metadata:
      name: snr-ext-pvc
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 5Gi
